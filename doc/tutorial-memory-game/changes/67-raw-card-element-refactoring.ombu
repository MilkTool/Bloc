OmEntry {	#tags : {		#prior : OmNullReference [  ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RawCardElement,				#isMetaSide : false			},			#name : #'drawOnSpartaCanvas:',			#protocol : #drawing,			#sourceCode : 'drawOnSpartaCanvas: aCanvas\r\t| aRadiusOffset |\r\tsuper drawOnSpartaCanvas: aCanvas.\r\taRadiusOffset := 12 / Float pi.\r\tself drawCommonOnSpartaCanvas: aCanvas.\r\taCanvas stroke\r\t\tpaint: self foregroundColor;\r\t\tpath:\r\t\t\t(aCanvas shape\r\t\t\t\tline: aRadiusOffset @ aRadiusOffset\r\t\t\t\tto: self extent - aRadiusOffset);\r\t\tdraw.\r\taCanvas stroke\r\t\tpaint: self foregroundColor;\r\t\tpath:\r\t\t\t(aCanvas shape\r\t\t\t\tline: (self width - aRadiusOffset) @ aRadiusOffset\r\t\t\t\tto: aRadiusOffset @ (self height - aRadiusOffset));\r\t\tdraw',			#stamp : 'JurajKubelka 3/5/2019 11:17',			#package : #Tutorial-MemoryGame-SpartaUI		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RawCardElement,				#isMetaSide : false			},			#name : #'drawOnSpartaCanvas:',			#protocol : #drawing,			#sourceCode : 'drawOnSpartaCanvas: aCanvas\r\tsuper drawOnSpartaCanvas: aCanvas.\r\tself drawCommonOnSpartaCanvas: aCanvas.\r\tself card isFlipped \r\t\tifTrue: [ self drawFaceSideOnSpartaCanvas: aCanvas ] \r\t\tifFalse: [ self drawBackSideOnSpartaCanvas: aCanvas ]',			#stamp : 'JurajKubelka 3/5/2019 11:19',			#package : #Tutorial-MemoryGame-SpartaUI		}	}}OmEntry {	#tags : {		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RawCardElement,				#isMetaSide : false			},			#name : #'drawCommonOnSpartaCanvas:',			#protocol : #drawing,			#sourceCode : 'drawCommonOnSpartaCanvas: aCanvas\r\taCanvas fill\r\t\tpaint: self backgroundColor;\r\t\tpath:\r\t\t\t(aCanvas shape\r\t\t\t\troundedRectangle: self boundsInLocal\r\t\t\t\tradii: (BlCornerRadii radius: 12));\r\t\tdraw',			#stamp : 'JurajKubelka 3/5/2019 11:17',			#package : #Tutorial-MemoryGame-SpartaUI		}	}}OmEntry {	#tags : {		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RawCardElement,				#isMetaSide : false			},			#name : #'drawBackSideOnSpartaCanvas:',			#protocol : #drawing,			#sourceCode : 'drawBackSideOnSpartaCanvas: aCanvas\r\t| aRadiusOffset |\r\taRadiusOffset := 12 / Float pi.\r\taCanvas stroke\r\t\tpaint: self foregroundColor;\r\t\tpath:\r\t\t\t(aCanvas shape\r\t\t\t\tline: aRadiusOffset @ aRadiusOffset\r\t\t\t\tto: self extent - aRadiusOffset);\r\t\tdraw.\r\taCanvas stroke\r\t\tpaint: self foregroundColor;\r\t\tpath:\r\t\t\t(aCanvas shape\r\t\t\t\tline: (self width - aRadiusOffset) @ aRadiusOffset\r\t\t\t\tto: aRadiusOffset @ (self height - aRadiusOffset));\r\t\tdraw',			#stamp : 'JurajKubelka 3/5/2019 11:18',			#package : #Tutorial-MemoryGame-SpartaUI		}	}}OmEntry {	#tags : {		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RawCardElement,				#isMetaSide : false			},			#name : #'drawFaceSideOnSpartaCanvas:',			#protocol : #drawing,			#sourceCode : 'drawFaceSideOnSpartaCanvas: aCanvas\r\t"nothing to do for now"',			#stamp : 'JurajKubelka 3/5/2019 11:18',			#package : #Tutorial-MemoryGame-SpartaUI		}	}}
